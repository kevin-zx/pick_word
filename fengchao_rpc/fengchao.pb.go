// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fengchao.proto

package fengchao_rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WordInfo struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	PcPv                 int32    `protobuf:"varint,2,opt,name=pc_pv,json=pcPv,proto3" json:"pc_pv,omitempty"`
	MobilePv             int32    `protobuf:"varint,3,opt,name=mobile_pv,json=mobilePv,proto3" json:"mobile_pv,omitempty"`
	Competition          int32    `protobuf:"varint,4,opt,name=competition,proto3" json:"competition,omitempty"`
	RecBid               float32  `protobuf:"fixed32,5,opt,name=rec_bid,json=recBid,proto3" json:"rec_bid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordInfo) Reset()         { *m = WordInfo{} }
func (m *WordInfo) String() string { return proto.CompactTextString(m) }
func (*WordInfo) ProtoMessage()    {}
func (*WordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_938373c5a6cab6be, []int{0}
}

func (m *WordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordInfo.Unmarshal(m, b)
}
func (m *WordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordInfo.Marshal(b, m, deterministic)
}
func (m *WordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordInfo.Merge(m, src)
}
func (m *WordInfo) XXX_Size() int {
	return xxx_messageInfo_WordInfo.Size(m)
}
func (m *WordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WordInfo proto.InternalMessageInfo

func (m *WordInfo) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *WordInfo) GetPcPv() int32 {
	if m != nil {
		return m.PcPv
	}
	return 0
}

func (m *WordInfo) GetMobilePv() int32 {
	if m != nil {
		return m.MobilePv
	}
	return 0
}

func (m *WordInfo) GetCompetition() int32 {
	if m != nil {
		return m.Competition
	}
	return 0
}

func (m *WordInfo) GetRecBid() float32 {
	if m != nil {
		return m.RecBid
	}
	return 0
}

type WordExpand struct {
	MainWord             string      `protobuf:"bytes,1,opt,name=main_word,json=mainWord,proto3" json:"main_word,omitempty"`
	WordInfos            []*WordInfo `protobuf:"bytes,2,rep,name=word_infos,json=wordInfos,proto3" json:"word_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WordExpand) Reset()         { *m = WordExpand{} }
func (m *WordExpand) String() string { return proto.CompactTextString(m) }
func (*WordExpand) ProtoMessage()    {}
func (*WordExpand) Descriptor() ([]byte, []int) {
	return fileDescriptor_938373c5a6cab6be, []int{1}
}

func (m *WordExpand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordExpand.Unmarshal(m, b)
}
func (m *WordExpand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordExpand.Marshal(b, m, deterministic)
}
func (m *WordExpand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordExpand.Merge(m, src)
}
func (m *WordExpand) XXX_Size() int {
	return xxx_messageInfo_WordExpand.Size(m)
}
func (m *WordExpand) XXX_DiscardUnknown() {
	xxx_messageInfo_WordExpand.DiscardUnknown(m)
}

var xxx_messageInfo_WordExpand proto.InternalMessageInfo

func (m *WordExpand) GetMainWord() string {
	if m != nil {
		return m.MainWord
	}
	return ""
}

func (m *WordExpand) GetWordInfos() []*WordInfo {
	if m != nil {
		return m.WordInfos
	}
	return nil
}

type QueryRequest struct {
	Words                []string `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_938373c5a6cab6be, []int{2}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

type QueryResponse struct {
	WordInfos            []*WordInfo `protobuf:"bytes,1,rep,name=word_infos,json=wordInfos,proto3" json:"word_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_938373c5a6cab6be, []int{3}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetWordInfos() []*WordInfo {
	if m != nil {
		return m.WordInfos
	}
	return nil
}

type ExpandRequest struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpandRequest) Reset()         { *m = ExpandRequest{} }
func (m *ExpandRequest) String() string { return proto.CompactTextString(m) }
func (*ExpandRequest) ProtoMessage()    {}
func (*ExpandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_938373c5a6cab6be, []int{4}
}

func (m *ExpandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandRequest.Unmarshal(m, b)
}
func (m *ExpandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandRequest.Marshal(b, m, deterministic)
}
func (m *ExpandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandRequest.Merge(m, src)
}
func (m *ExpandRequest) XXX_Size() int {
	return xxx_messageInfo_ExpandRequest.Size(m)
}
func (m *ExpandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandRequest proto.InternalMessageInfo

func (m *ExpandRequest) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type ExpandResponse struct {
	WordExpand           *WordExpand `protobuf:"bytes,1,opt,name=word_expand,json=wordExpand,proto3" json:"word_expand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExpandResponse) Reset()         { *m = ExpandResponse{} }
func (m *ExpandResponse) String() string { return proto.CompactTextString(m) }
func (*ExpandResponse) ProtoMessage()    {}
func (*ExpandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_938373c5a6cab6be, []int{5}
}

func (m *ExpandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandResponse.Unmarshal(m, b)
}
func (m *ExpandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandResponse.Marshal(b, m, deterministic)
}
func (m *ExpandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandResponse.Merge(m, src)
}
func (m *ExpandResponse) XXX_Size() int {
	return xxx_messageInfo_ExpandResponse.Size(m)
}
func (m *ExpandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandResponse proto.InternalMessageInfo

func (m *ExpandResponse) GetWordExpand() *WordExpand {
	if m != nil {
		return m.WordExpand
	}
	return nil
}

func init() {
	proto.RegisterType((*WordInfo)(nil), "fengchao_rpc.WordInfo")
	proto.RegisterType((*WordExpand)(nil), "fengchao_rpc.WordExpand")
	proto.RegisterType((*QueryRequest)(nil), "fengchao_rpc.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "fengchao_rpc.QueryResponse")
	proto.RegisterType((*ExpandRequest)(nil), "fengchao_rpc.ExpandRequest")
	proto.RegisterType((*ExpandResponse)(nil), "fengchao_rpc.ExpandResponse")
}

func init() { proto.RegisterFile("fengchao.proto", fileDescriptor_938373c5a6cab6be) }

var fileDescriptor_938373c5a6cab6be = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xb1, 0x4e, 0xf3, 0x30,
	0x18, 0xfc, 0xdd, 0x36, 0xfd, 0x9b, 0x2f, 0x6d, 0x91, 0x0c, 0x02, 0xab, 0x65, 0x88, 0x02, 0x43,
	0xa6, 0x0e, 0x45, 0x0c, 0xac, 0x95, 0x5a, 0x09, 0xb1, 0x94, 0x30, 0x30, 0x86, 0xd6, 0x71, 0xc1,
	0x12, 0xb5, 0x8d, 0x93, 0xa6, 0xf0, 0x0c, 0xbc, 0x02, 0x0f, 0x8b, 0xe2, 0xc4, 0x52, 0x0a, 0x19,
	0xd8, 0x3e, 0xdf, 0x5d, 0x7c, 0x77, 0x5f, 0x0c, 0xc3, 0x0d, 0x13, 0xcf, 0xf4, 0x65, 0x25, 0x27,
	0x4a, 0xcb, 0x4c, 0xe2, 0xbe, 0x3d, 0xc7, 0x5a, 0xd1, 0xe0, 0x13, 0x41, 0xef, 0x51, 0xea, 0xe4,
	0x56, 0x6c, 0x24, 0xc6, 0xd0, 0xd9, 0x4b, 0x9d, 0x10, 0xe4, 0xa3, 0xd0, 0x8d, 0xcc, 0x8c, 0x8f,
	0xc1, 0x51, 0x34, 0x56, 0x39, 0x69, 0xf9, 0x28, 0x74, 0xa2, 0x8e, 0xa2, 0xcb, 0x1c, 0x8f, 0xc1,
	0xdd, 0xca, 0x35, 0x7f, 0x65, 0x05, 0xd1, 0x36, 0x44, 0xaf, 0x04, 0x96, 0x39, 0xf6, 0xc1, 0xa3,
	0x72, 0xab, 0x58, 0xc6, 0x33, 0x2e, 0x05, 0xe9, 0x18, 0xba, 0x0e, 0xe1, 0x33, 0xf8, 0xaf, 0x19,
	0x8d, 0xd7, 0x3c, 0x21, 0x8e, 0x8f, 0xc2, 0x56, 0xd4, 0xd5, 0x8c, 0xce, 0x78, 0x12, 0x3c, 0x01,
	0x14, 0x61, 0xe6, 0xef, 0x6a, 0x25, 0x12, 0xe3, 0xb2, 0xe2, 0x22, 0xae, 0x65, 0xea, 0x15, 0x40,
	0x21, 0xc1, 0xd7, 0x00, 0x05, 0x1e, 0x73, 0xb1, 0x91, 0x29, 0x69, 0xf9, 0xed, 0xd0, 0x9b, 0x9e,
	0x4e, 0xea, 0xdd, 0x26, 0xb6, 0x57, 0xe4, 0xee, 0xab, 0x29, 0x0d, 0x2e, 0xa1, 0x7f, 0xbf, 0x63,
	0xfa, 0x23, 0x62, 0x6f, 0x3b, 0x96, 0x66, 0xf8, 0x04, 0x9c, 0x82, 0x4c, 0x09, 0xf2, 0xdb, 0xa1,
	0x1b, 0x95, 0x87, 0x60, 0x01, 0x83, 0x4a, 0x95, 0x2a, 0x29, 0x52, 0xf6, 0xc3, 0x0d, 0xfd, 0xd5,
	0xed, 0x02, 0x06, 0x65, 0x17, 0x6b, 0xd7, 0xb0, 0xe1, 0xe0, 0x0e, 0x86, 0x56, 0x54, 0xb9, 0xdd,
	0x80, 0x67, 0xdc, 0x98, 0x81, 0x8d, 0xd8, 0x9b, 0x92, 0xdf, 0x76, 0xd5, 0x67, 0x26, 0x5a, 0x39,
	0x4f, 0xbf, 0x10, 0x1c, 0x2d, 0x2a, 0xdd, 0x03, 0xd3, 0x39, 0xa7, 0x0c, 0xcf, 0xc0, 0x31, 0x6d,
	0xf0, 0xe8, 0xf0, 0x8a, 0xfa, 0x22, 0x46, 0xe3, 0x46, 0xae, 0x0c, 0x14, 0xfc, 0xc3, 0x73, 0xe8,
	0xda, 0xbf, 0x72, 0x28, 0x3c, 0xe8, 0x37, 0x3a, 0x6f, 0x26, 0xed, 0x35, 0xeb, 0xae, 0x79, 0x83,
	0x57, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x84, 0xe5, 0x85, 0x95, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FengchaoServiceClient is the client API for FengchaoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FengchaoServiceClient interface {
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	Expand(ctx context.Context, in *ExpandRequest, opts ...grpc.CallOption) (*ExpandResponse, error)
}

type fengchaoServiceClient struct {
	cc *grpc.ClientConn
}

func NewFengchaoServiceClient(cc *grpc.ClientConn) FengchaoServiceClient {
	return &fengchaoServiceClient{cc}
}

func (c *fengchaoServiceClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/fengchao_rpc.FengchaoService/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fengchaoServiceClient) Expand(ctx context.Context, in *ExpandRequest, opts ...grpc.CallOption) (*ExpandResponse, error) {
	out := new(ExpandResponse)
	err := c.cc.Invoke(ctx, "/fengchao_rpc.FengchaoService/Expand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FengchaoServiceServer is the server API for FengchaoService service.
type FengchaoServiceServer interface {
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	Expand(context.Context, *ExpandRequest) (*ExpandResponse, error)
}

// UnimplementedFengchaoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFengchaoServiceServer struct {
}

func (*UnimplementedFengchaoServiceServer) Query(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedFengchaoServiceServer) Expand(ctx context.Context, req *ExpandRequest) (*ExpandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Expand not implemented")
}

func RegisterFengchaoServiceServer(s *grpc.Server, srv FengchaoServiceServer) {
	s.RegisterService(&_FengchaoService_serviceDesc, srv)
}

func _FengchaoService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FengchaoServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fengchao_rpc.FengchaoService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FengchaoServiceServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FengchaoService_Expand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExpandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FengchaoServiceServer).Expand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fengchao_rpc.FengchaoService/Expand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FengchaoServiceServer).Expand(ctx, req.(*ExpandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FengchaoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fengchao_rpc.FengchaoService",
	HandlerType: (*FengchaoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _FengchaoService_Query_Handler,
		},
		{
			MethodName: "Expand",
			Handler:    _FengchaoService_Expand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fengchao.proto",
}
